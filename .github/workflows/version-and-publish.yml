name: Version and Publish
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version_and_publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      type: ${{ steps.set_output.outputs.type }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: yarn set version 4.5.0

      - name: Get version bump type
        id: bump
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ "$PR_TITLE" =~ ^major: ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ "$PR_TITLE" =~ ^minor: ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif [[ "$PR_TITLE" =~ ^patch: ]]; then
            echo "type=patch" >> $GITHUB_OUTPUT
          else
            echo "type=none" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.bump.outputs.type != 'none'
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

      - name: Bump version
        if: steps.bump.outputs.type != 'none'
        run: yarn version ${{ steps.bump.outputs.type }}

      - name: Push changes
        if: steps.bump.outputs.type != 'none'
        run: |
          git push
          git push --tags

      - name: Set job output
        id: set_output
        run: echo "type=${{ steps.bump.outputs.type }}" >> $GITHUB_OUTPUT

  publish:
    needs: version_and_publish
    if: success() && needs.version_and_publish.outputs.type != 'none'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: yarn set version 4.5.0

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Publish to NPM
        run: yarn npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
